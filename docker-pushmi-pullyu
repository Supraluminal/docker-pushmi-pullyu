#!/usr/bin/env bash
set -o errexit
set -o pipefail
set -o nounset
trap 'echo "$0: line $LINENO: exit status of last command: $?" 1>&2' ERR
trap 'cleanup' EXIT

cleanup() {
  if [ -n "${registry_container_name-}" ] && docker ps -q -f name="$registry_container_name"
  then
    echo "Killing the registry..."
    docker kill "$registry_container_name" || true
    docker rm "$registry_container_name" || true
  fi
}

usage() {
  echo "
Usage:	$0 [OPTIONS] NAME[:TAG] [USER@]HOSTNAME

Push an image directly to a remote host (without a separate registry)

Options:
  -s, --ssh_opts string   Specify additional ssh arguments (e.g. --ssh_opts \"-i private.pem -C\")"
}

if [ "$#" -lt 2 ]
then
  echo "\"$0\" requires at least 2 arguments."
  usage
  exit 1
fi

while [ -n "${1+x}" ]
do
  case "$1" in
    -s|--ssh_opts|--ssh_opts=*)
      ssh_opts="${1##--ssh_opts=}"
      if [ "$ssh_opts" = "$1" ]
      then
        if [ "$#" -ge 2 ]
        then
          ssh_opts="$2"
          shift
        else
          ssh_opts=""
        fi
      fi
      if [ -z "$ssh_opts" ]
      then
        echo "flag needs an argument: $1" 1>&2
        exit 64
      fi
      ;;
    -*)
      echo "unknown flag: $1" 1>&2
      exit 64
      ;;
    *)
      if [ -z "${image_name+x}" ]
      then
        image_name="$1"
      elif [ -z "${deploy_target+x}" ]
      then
        deploy_target="$1"
      else
        echo "Bad argument: $1" 1>&2
        exit 64
      fi
      ;;
  esac
  shift
done

if [ -z "${image_name+x}" ]
then
  echo "missing argument 'NAME[:TAG]'."
  usage
  exit 1
fi
if [ -z "${deploy_target+x}" ]
then
  echo "missing argument '[USER@]HOSTNAME'."
  usage
  exit 1
fi

registry_port=5000
registry_host="localhost"

echo "Running a registry at $registry_host:$registry_port..."
registry_container_name=$(
  docker run --detach --publish="$registry_port:$registry_port" registry:2
)

echo "Pushing $image_name to $registry_host:$registry_port..."
docker tag "$image_name" "$registry_host:$registry_port/$image_name"
docker push "$registry_host:$registry_port/$image_name"
docker rmi "$registry_host:$registry_port/$image_name"

echo "Pulling $image_name onto $deploy_target from $registry_host:$registry_port..."
cmd="ssh -R '$registry_port:$registry_host:$registry_port' ${ssh_opts:-} '$deploy_target' sh"
eval $cmd <<EOF
  docker pull "$registry_host:$registry_port/$image_name" \
    && docker tag "$registry_host:$registry_port/$image_name" "$image_name" \
    && docker rmi "$registry_host:$registry_port/$image_name"
EOF
